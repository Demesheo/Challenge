CREATE constraint on (n:Brand) assert n.slug is unique;
CREATE constraint on (n:Category) assert n.slug is unique;
CREATE constraint on (n:Company) assert n.slug is unique;
CREATE constraint on (n:Distributor) assert n.slug is unique;
CREATE constraint on (n:Product) assert n.upc is unique;
CREATE constraint on (n:Product) assert n.slug is unique;
CREATE constraint on (n:User) assert n.email is unique;
CREATE (:Distributor {slug: 'grainger', name: 'Grainger'});
CREATE (:Product {slug: '12800000418', upc: 12800000418});
CREATE (:Product {slug: '12800000425', upc: 12800000425});
CREATE (:Product {slug: '12800000432', upc: 12800000432});
CREATE (:Product {slug: '12800000456', upc: 12800000456});
CREATE (:Category {name: 'Copper Building Wire', slug: 'copper-building-wire'})<-[:BELONGS_TO]-(:Category {name: 'Copper Building Wire-Thw-Tw-Str (Stranded)', slug: 'copper-building-wire-thw-tw-str-stranded'});
MATCH (p:Product) MATCH (c:Category {slug: 'copper-building-wire-thw-tw-str-stranded'}) MERGE (p)-[:IS]->(c);
CREATE (:Brand {slug: 'acme-electric', name: 'ACME ELECTRIC'});
MATCH (p:Product) MATCH (b:Brand {slug: 'acme-electric'}) MERGE (p)-[:HAS_BRAND]->(b);
MATCH (d:Distributor {slug: 'grainger'}) CREATE (d)-[:IS_FULFILLER]->(:SubCart)-[:PART_OF]->(:Cart)<-[:HAS]-(:User {email: 'tomhanks@example.com'})-[:EMPLOYED_AT]->(:Company {name: 'MovieStars L.L.C.', slug: 'movie-stars'});
MATCH (d:Distributor {slug: 'grainger'}) MATCH (p:Product {upc: 12800000418}) MERGE (d)-[:SELLS {inStock: 1000, sellsFor: 999.99}]->(p);
MATCH (d:Distributor {slug: 'grainger'}) MATCH (p:Product {upc: 12800000432}) MERGE (d)-[:SELLS {inStock: 500, sellsFor: 99.99}]->(p);
MATCH (d:Distributor {slug: 'grainger'}) MATCH (p:Product {upc: 12800000456}) MERGE (d)-[:SELLS {inStock: 100, sellsFor: 9.99}]->(p);
MATCH (s:SubCart) MATCH (p:Product {upc: 12800000418}) CREATE (p)-[:PART_OF {amount: 2, unitPrice: 999.99}]->(s);
MATCH (s:SubCart) MATCH (p:Product {upc: 12800000456}) CREATE (p)-[:PART_OF {amount: 10, unitPrice: 9.99}]->(s);
